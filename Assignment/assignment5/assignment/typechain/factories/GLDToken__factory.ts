/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GldToken, GldTokenInterface } from "../GldToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gldToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017c9380380620017c9833981810160405281019062000037919062000341565b6040518060400160405280600481526020017f476f6c64000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f474c4400000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb9291906200027a565b508060049080519060200190620000d49291906200027a565b505050620000e93382620000f760201b60201c565b806005819055505062000533565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200016a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016190620003a5565b60405180910390fd5b6200017e600083836200027060201b60201c565b8060026000828254620001929190620003f5565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001e99190620003f5565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002509190620003c7565b60405180910390a36200026c600083836200027560201b60201c565b5050565b505050565b505050565b82805462000288906200045c565b90600052602060002090601f016020900481019282620002ac5760008555620002f8565b82601f10620002c757805160ff1916838001178555620002f8565b82800160010185558215620002f8579182015b82811115620002f7578251825591602001919060010190620002da565b5b5090506200030791906200030b565b5090565b5b80821115620003265760008160009055506001016200030c565b5090565b6000815190506200033b8162000519565b92915050565b6000602082840312156200035457600080fd5b600062000364848285016200032a565b91505092915050565b60006200037c601f83620003e4565b91506200038982620004f0565b602082019050919050565b6200039f8162000452565b82525050565b60006020820190508181036000830152620003c0816200036d565b9050919050565b6000602082019050620003de600083018462000394565b92915050565b600082825260208201905092915050565b6000620004028262000452565b91506200040f8362000452565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000447576200044662000492565b5b828201905092915050565b6000819050919050565b600060028204905060018216806200047557607f821691505b602082108114156200048c576200048b620004c1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b620005248162000452565b81146200053057600080fd5b50565b61128680620005436000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d35780639939b8b2146101f1578063a457c2d71461020f578063a9059cbb1461023f578063dd62ed3e1461026f576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029f565b6040516100ce9190610d4c565b60405180910390f35b6100f160048036038101906100ec9190610b9a565b610331565b6040516100fe9190610d31565b60405180910390f35b61010f610354565b60405161011c9190610e4e565b60405180910390f35b61013f600480360381019061013a9190610b4b565b61035e565b60405161014c9190610d31565b60405180910390f35b61015d61038d565b60405161016a9190610e69565b60405180910390f35b61018d60048036038101906101889190610b9a565b610396565b60405161019a9190610d31565b60405180910390f35b6101bd60048036038101906101b89190610ae6565b6103cd565b6040516101ca9190610e4e565b60405180910390f35b6101db610415565b6040516101e89190610d4c565b60405180910390f35b6101f96104a7565b6040516102069190610e4e565b60405180910390f35b61022960048036038101906102249190610b9a565b6104b1565b6040516102369190610d31565b60405180910390f35b61025960048036038101906102549190610b9a565b610528565b6040516102669190610d31565b60405180910390f35b61028960048036038101906102849190610b0f565b61054b565b6040516102969190610e4e565b60405180910390f35b6060600380546102ae90610f7e565b80601f01602080910402602001604051908101604052809291908181526020018280546102da90610f7e565b80156103275780601f106102fc57610100808354040283529160200191610327565b820191906000526020600020905b81548152906001019060200180831161030a57829003601f168201915b5050505050905090565b60008061033c6105d2565b90506103498185856105da565b600191505092915050565b6000600254905090565b6000806103696105d2565b90506103768582856107a5565b610381858585610831565b60019150509392505050565b60006012905090565b6000806103a16105d2565b90506103c28185856103b3858961054b565b6103bd9190610ea0565b6105da565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461042490610f7e565b80601f016020809104026020016040519081016040528092919081815260200182805461045090610f7e565b801561049d5780601f106104725761010080835404028352916020019161049d565b820191906000526020600020905b81548152906001019060200180831161048057829003601f168201915b5050505050905090565b6000600554905090565b6000806104bc6105d2565b905060006104ca828661054b565b90508381101561050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610e2e565b60405180910390fd5b61051c82868684036105da565b60019250505092915050565b6000806105336105d2565b9050610540818585610831565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561064a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064190610e0e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b190610d8e565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107989190610e4e565b60405180910390a3505050565b60006107b1848461054b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461082b578181101561081d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081490610dae565b60405180910390fd5b61082a84848484036105da565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089890610dee565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610911576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090890610d6e565b60405180910390fd5b61091c838383610ab2565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099990610dce565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a359190610ea0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a999190610e4e565b60405180910390a3610aac848484610ab7565b50505050565b505050565b505050565b600081359050610acb81611222565b92915050565b600081359050610ae081611239565b92915050565b600060208284031215610af857600080fd5b6000610b0684828501610abc565b91505092915050565b60008060408385031215610b2257600080fd5b6000610b3085828601610abc565b9250506020610b4185828601610abc565b9150509250929050565b600080600060608486031215610b6057600080fd5b6000610b6e86828701610abc565b9350506020610b7f86828701610abc565b9250506040610b9086828701610ad1565b9150509250925092565b60008060408385031215610bad57600080fd5b6000610bbb85828601610abc565b9250506020610bcc85828601610ad1565b9150509250929050565b610bdf81610f08565b82525050565b6000610bf082610e84565b610bfa8185610e8f565b9350610c0a818560208601610f4b565b610c138161100e565b840191505092915050565b6000610c2b602383610e8f565b9150610c368261101f565b604082019050919050565b6000610c4e602283610e8f565b9150610c598261106e565b604082019050919050565b6000610c71601d83610e8f565b9150610c7c826110bd565b602082019050919050565b6000610c94602683610e8f565b9150610c9f826110e6565b604082019050919050565b6000610cb7602583610e8f565b9150610cc282611135565b604082019050919050565b6000610cda602483610e8f565b9150610ce582611184565b604082019050919050565b6000610cfd602583610e8f565b9150610d08826111d3565b604082019050919050565b610d1c81610f34565b82525050565b610d2b81610f3e565b82525050565b6000602082019050610d466000830184610bd6565b92915050565b60006020820190508181036000830152610d668184610be5565b905092915050565b60006020820190508181036000830152610d8781610c1e565b9050919050565b60006020820190508181036000830152610da781610c41565b9050919050565b60006020820190508181036000830152610dc781610c64565b9050919050565b60006020820190508181036000830152610de781610c87565b9050919050565b60006020820190508181036000830152610e0781610caa565b9050919050565b60006020820190508181036000830152610e2781610ccd565b9050919050565b60006020820190508181036000830152610e4781610cf0565b9050919050565b6000602082019050610e636000830184610d13565b92915050565b6000602082019050610e7e6000830184610d22565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610eab82610f34565b9150610eb683610f34565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eeb57610eea610fb0565b5b828201905092915050565b6000610f0182610f14565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f69578082015181840152602081019050610f4e565b83811115610f78576000848401525b50505050565b60006002820490506001821680610f9657607f821691505b60208210811415610faa57610fa9610fdf565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61122b81610ef6565b811461123657600080fd5b50565b61124281610f34565b811461124d57600080fd5b5056fea2646970667358221220a1e6c0c7f7e5479dd93c338aca0fc2a737249cdcf18a8c82879552c818ccba5964736f6c63430008040033";

export class GldToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GldToken> {
    return super.deploy(_initialSupply, overrides || {}) as Promise<GldToken>;
  }
  getDeployTransaction(
    _initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_initialSupply, overrides || {});
  }
  attach(address: string): GldToken {
    return super.attach(address) as GldToken;
  }
  connect(signer: Signer): GldToken__factory {
    return super.connect(signer) as GldToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GldTokenInterface {
    return new utils.Interface(_abi) as GldTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GldToken {
    return new Contract(address, _abi, signerOrProvider) as GldToken;
  }
}
